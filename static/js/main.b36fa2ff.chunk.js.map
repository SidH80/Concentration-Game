{"version":3,"sources":["components/CityCard/index.js","components/NavBar/index.js","components/Wrapper/index.js","components/Title/index.js","Container.js","Row.js","App.js","index.js"],"names":["CityCard","props","value","id","onClick","handleClick","className","alt","name","src","image","NavBar","href","title","rightWrong","score","topScore","Wrapper","children","Title","Container","fluid","Row","App","state","cities","currentScore","clicked","indexOf","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","shuffledCities","array","i","length","j","Math","floor","random","shuffleCities","this","map","city","key","Component","ReactDOM","render","document","getElementById"],"mappings":"unEAkBiBA,MAfjB,SAAkBC,GACd,OAEE,yBACIC,MAAOD,EAAME,GACbC,QAAS,kBAAMH,EAAMI,YAAYJ,EAAME,MAGzC,yBAAKG,UAAU,iBACb,yBAAKC,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,W,MCU5BC,MAlBf,SAAgBV,GACZ,OACI,6BACA,4BACE,wBAAIK,UAAU,IACZ,uBAAGM,KAAK,iBAAiBX,EAAMY,QAGjC,wBAAIV,GAAG,IAAIF,EAAMa,YAEjB,wBAAIX,GAAG,IAAP,kBAA0BF,EAAMc,OAEhC,wBAAIZ,GAAG,IAAP,cAAsBF,EAAMe,a,MCTvBC,MAJf,SAAiBhB,GACf,OAAO,yBAAKK,UAAU,WAAWL,EAAMiB,WCC1BC,G,MAFD,SAAAlB,GAAK,OAAI,yBAAKK,UAAU,SAASL,EAAMiB,YCItCE,EALG,SAAAnB,GAAK,OACrB,yBAAKK,UAAS,mBAAcL,EAAMoB,MAAQ,SAAW,KAClDpB,EAAMiB,WCGII,EALH,SAAArB,GAAK,OACf,yBAAKK,UAAS,aAAQL,EAAMoB,MAAQ,SAAW,KAC5CpB,EAAMiB,W,iBCgGIK,E,2MAhFbC,MAAQ,CACNC,SACAC,aAAc,EACdV,SAAU,EACVF,WAAY,GACZa,QAAS,I,EAGXtB,YAAc,SAAAF,IAC4B,IAApC,EAAKqB,MAAMG,QAAQC,QAAQzB,IAC7B,EAAK0B,kBACL,EAAKC,SAAS,CAAEH,QAAS,EAAKH,MAAMG,QAAQI,OAAO5B,MAEnD,EAAK6B,e,EAITH,gBAAkB,WAChB,IAAMI,EAAW,EAAKT,MAAME,aAAe,EAC3C,EAAKI,SAAS,CACZJ,aAAcO,EACdnB,WAAY,KAEVmB,GAAY,EAAKT,MAAMR,SACzB,EAAKc,SAAS,CAAEd,SAAUiB,IAEN,KAAbA,GACP,EAAKH,SAAS,CAAEhB,WAAY,aAE9B,EAAKoB,iB,EAGPF,YAAc,WACZ,EAAKF,SAAS,CACZJ,aAAc,EACdV,SAAU,EAAKQ,MAAMR,SACrBF,WAAY,qBACZa,QAAS,KAEX,EAAKO,iB,EAGPA,cAAgB,WACd,IAAIC,EArDR,SAAuBC,GACrB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADC,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,OAAOH,EAgDgBO,CAAclB,GACnC,EAAKK,SAAS,CAAEL,OAAQU,K,wEAGhB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEtB,MAAM,mBACNE,MAAO6B,KAAKpB,MAAME,aAClBV,SAAU4B,KAAKpB,MAAMR,SACrBF,WAAY8B,KAAKpB,MAAMV,aAGzB,kBAAC,EAAD,yHAIA,kBAAC,EAAD,KACE,kBAAC,EAAD,KACO8B,KAAKpB,MAAMC,OAAOoB,KAAI,SAAAC,GAAI,OAC3B,kBAAC,EAAD,CACEC,IAAKD,EAAK3C,GACVE,YAAa,EAAKA,YAClBwB,gBAAiB,EAAKA,gBACtBG,YAAa,EAAKA,YAClBE,cAAe,EAAKA,cACpBxB,MAAOoC,EAAKpC,kB,GAxEZsC,a,MCblBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b36fa2ff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction CityCard(props) {\r\n    return (\r\n\r\n      <div\r\n          value={props.id}\r\n          onClick={() => props.handleClick(props.id)}\r\n        >\r\n\r\n        <div className=\"img-container\">\r\n          <img alt={props.name} src={props.image} />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default CityCard;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction NavBar(props) {\r\n    return (\r\n        <nav>\r\n        <ul>\r\n          <li className=\"\">\r\n            <a href=\"/clicky-game/\">{props.title}</a>\r\n          </li>\r\n\r\n          <li id=\"\">{props.rightWrong}</li>\r\n\r\n          <li id=\"\">Current Score: {props.score}</li>\r\n\r\n          <li id=\"\">Top Score: {props.topScore}</li>\r\n        </ul>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nconst Title = props => <div className=\"title\">{props.children}</div>;\n\nexport default Title;\n","import React from \"react\";\n\nconst Container = props =>\n  <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>;\n\nexport default Container;\n","import React from \"react\";\n\nconst Row = props =>\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>;\n\nexport default Row;\n","import React, { Component } from \"react\";\r\nimport CityCard from \"./components/CityCard\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport Container from \"./Container\";\r\nimport Row from \"./Row\";\r\nimport cities from \"./cities.json\";\r\nimport \"./App.css\";\r\n\r\nfunction shuffleCities(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\nclass App extends Component {\r\n  // Set this.state\r\n  state = {\r\n    cities,\r\n    currentScore: 0,\r\n    topScore: 0,\r\n    rightWrong: \"\",\r\n    clicked: [],\r\n  };\r\n\r\n  handleClick = id => {\r\n    if (this.state.clicked.indexOf(id) === -1) {\r\n      this.handleIncrement();\r\n      this.setState({ clicked: this.state.clicked.concat(id) });\r\n    } else {\r\n      this.handleReset();\r\n    }\r\n  };\r\n\r\n  handleIncrement = () => {\r\n    const newScore = this.state.currentScore + 1;\r\n    this.setState({\r\n      currentScore: newScore,\r\n      rightWrong: \"\"\r\n    });\r\n    if (newScore >= this.state.topScore) {\r\n      this.setState({ topScore: newScore });\r\n    }\r\n    else if (newScore === 12) {\r\n      this.setState({ rightWrong: \"You win!\" });\r\n    }\r\n    this.handleShuffle();\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      currentScore: 0,\r\n      topScore: this.state.topScore,\r\n      rightWrong: \"This tour is over!\",\r\n      clicked: []\r\n    });\r\n    this.handleShuffle();\r\n  };\r\n\r\n  handleShuffle = () => {\r\n    let shuffledCities = shuffleCities(cities);\r\n    this.setState({ cities: shuffledCities });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <NavBar\r\n          title=\"City Clicky Game\"\r\n          score={this.state.currentScore}\r\n          topScore={this.state.topScore}\r\n          rightWrong={this.state.rightWrong}\r\n        />\r\n\r\n        <Title>\r\n          Click on each city you want to visit. You can only visit it once! Visit it twice and your vacation is cancelled!\r\n        </Title>\r\n\r\n        <Container>\r\n          <Row>\r\n                {this.state.cities.map(city => (\r\n                <CityCard\r\n                  key={city.id}\r\n                  handleClick={this.handleClick}\r\n                  handleIncrement={this.handleIncrement}\r\n                  handleReset={this.handleReset}\r\n                  handleShuffle={this.handleShuffle}\r\n                  image={city.image}\r\n                />\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}